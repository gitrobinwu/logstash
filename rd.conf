### rd.conf 
input {
	stdin{
	}
	tcp {
		port =>"514"
		codec =>plain{
			charset =>"GBK"
		}
		tags =>["tcp","security","port514"]
	}
	udp {
		port =>"514"
		codec =>plain{
			charset =>"GBK"
		}
		tags =>["udp","security","port514"]
	}
	tcp {
		port =>"515"
		codec =>plain{
			charset =>"GBK"
		}
		tags =>["tcp","security","port515"]
	}
	udp {
		port =>"515"
		codec =>plain{
			charset =>"GBK"
		}
		tags =>["udp","security","port515"]
	}
}

filter {
	# 转换为本地时区 
	ruby {
		code =>"event['@timestamp'].time.localtime()"
	}
	# 用户登录日志
	if "security" in [tags] {
		mutate {
			# template security-*(order: 0)  security-xxx-*(order: 1)	
			# 设置索引前缀，作为大的分类
			replace =>["[@metadata][index_prefix]","security"]
			# 不需要特殊处理日志，默认进库,使用security-* 模板 
			replace =>["[@metadata][index_type]","user"] 
		}	

		# 添加日志来源的标识
		if "port514" in [tags] {
			mutate {
				add_field =>{ port =>"514" }
			}	
		}
		if "port515" in [tags] {
			mutate {
				add_field =>{ port =>"515" }
			}	
		}
		
		# 取日志时间字段
		if [message] {
			grok {
				match =>[
					"message","(?:\<\d+\>)(?<time_syslog>.*?:\d+:\d+)\s+"
				]
			}
			if "_grokparsefailure" not in [tags] {
				if [time_syslog] {
					date {
						match =>["time_syslog","MMM dd HH:mm:ss","MMM  dd HH:mm:ss"]
						target =>"time_syslog"
					}
					ruby {
						code =>"event['time_syslog'].time.localtime()"
					}
				}
			}
		}

		# Batch logon type is used by batch servers, where processes might run on behalf of a user without the user’s direct intervention
		#if [message] =~ "登录类型:4" {
		#	ruby{
		#		code =>"event.cancel"
		#	}
		#}

		# 根据message 格式进行分类处理 -->[需要发邮件的监控消息]	
		if [message] =~ "已成功登录帐户" and [message] !~ "登录类型:4"{
			mutate {
				# 使用security-success-login-* 模板
				replace =>["[@metadata][index_type]","success-login"]
				add_tag => ["Trigger email alert"]
				add_field =>{ alert_subject =>"已成功登陆用户"}
				add_field =>{alert_body =>"<html><br/><p>timestamp: %{@timestamp}</p><p>host: %{host}</p><br/><p>message: %{message}</p></html>"}
			}
		}
		if [message] =~ "已注销帐户" and [message] !~ "登录类型:4"{
			mutate {
				replace =>["[@metadata][index_type]","close-account"]
				add_tag =>["Trigger email alert"]
				add_field =>{ alert_subject =>"已注销用户"}
				add_field =>{alert_body =>"<html><br/><p>timestamp: %{@timestamp}</p><p>host: %{host}</p><br/><p>message: %{message}</p></html>"}
			}
		}
		if [message] =~ "已更改用户帐户" or [message] =~ "已启用用户帐户" or [message] =~ "已禁用用户帐户"{
			mutate {
				replace  =>["[@metadata][index_type]","assign-permission"]
				add_tag =>["Trigger email alert"]
				add_field =>{ alert_subject =>"已调用特权服务" }
				add_field =>{alert_body =>"<html><br/><p>timestamp: %{@timestamp}</p><p>host: %{host}</p><br/><p>message: %{message}</p></html>"}
			}
		}
	}
}

output {
	stdout {
		codec =>"rubydebug"
	}
	# 配置发送email消息
	if "Trigger email alert" in [tags] {
		email {
			from =>"jiankong@rundongauto.cn"
			to =>"gaoxuezhi@rundongauto.cn,wuyongwei@besttone.com.cn,47894642@qq.com"
			subject =>"[TESTAlert] %{alert_subject}"
			via =>"smtp"
			port =>25

			address =>"smtp.263.net"
			domain =>"smtp.263.net"

			username =>"jiankong@rundongauto.cn"
			password =>"1qaz2WSX"
			authentication =>"login"
			use_tls =>false
			workers =>30 

			htmlbody =>"%{alert_body}"
		}	
	}
	# 写入es
	if [@metadata][index_prefix] and [@metadata][index_type] {
		elasticsearch {
			hosts =>["127.0.0.1:9200"]
			user =>"logstash"
			password =>"logstash"
			document_type =>"%{[@metadata][index_type]}"
			workers =>8
			flush_size =>5000
			idle_flush_time =>5
			index =>"%{[@metadata][index_prefix]}-%{[@metadata][index_type]}-%{+YYYY.MM.dd}"
		}		
	}		
}










